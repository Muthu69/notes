 npm init -y  || creates json || keeps track of dependancies 

 since this is a web app thats going to "express"

 npm i express || install express packages

 we get to write much less code


 HELLO WORLD
 
const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})


http:80
https:443

any ports below 1024 are previleged ports 

its kind of annoying everytime we restart servers everytime me make changes
so install

npm i nodemon

nodemon is a tool that monitors changes in your Node.js application and automatically restarts
the server when changes are detected. server.js is the entry point of your Node.js application.

npm i -D nodemon

app.use(express.static("public"))
        this used to respond with html/css/img or any static web page
        everytime it gets a http request

res.send(`<h1>${Date()}</h1>`)

EJS:
app.set("view engine","ejs")
               the rendering will be done by ejs now

by default ejs look into "views" directory so lets create one for it


app.get('/', (req, res) => {
     res.render("index.ejs")
})

app.use(express.static("public"))
         by doing this i can render page in server using ejs and also there is a lotta perks to it

in essecence EJS (Embedded JavaScript) is nothing but a templating language for JavaScript that allows you to generate HTML markup 
with JavaScript code embedded within it.


get request cant contain an http body so it cant modify anything on server
